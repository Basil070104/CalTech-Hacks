/**
 * Service for sending messages to Slack
 */

// Slack API configuration
const SLACK_API_URL = "https://slack.com/api/chat.postMessage"
const SLACK_BOT_TOKEN = "xoxb-8815276833843-8834891283840-NeIZ0eCaRngHsoWXXfchUMzv"
const SLACK_CHANNEL = "U08PZ84QHSP" // User ID to send DM to

/**
 * Send a message to Slack through the backend endpoint
 * @param {string} message - The formatted message to send
 * @returns {Promise<Object>} - Response from your backend
 */
export async function sendSlackMessage(message) {
  const response = await fetch("/api/notify-slack", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({ message }),
  });

  if (!response.ok) {
    const err = await response.json().catch(() => ({}));
    throw new Error(err.detail || err.error || "Failed to send Slack message");
  }

  return await response.json();
}

/**
 * Format inventory alert for Slack
 * @param {string} hugoResponse - The response from Hugo AI
 * @returns {string} - Formatted message for Slack
 */
export function formatSlackInventoryAlert(hugoResponse) {
  const timestamp = new Date().toLocaleString();

  return `
:warning: *INVENTORY ALERT* :warning:
*Time:* ${timestamp}

${hugoResponse}

_This alert was automatically generated by Hugo AI after data import._
`;
}